setupCommand: bash /opt/spm/bin/setup-sematext
removeCommand: /opt/spm/bin/spm-remove-application.sh

debug:
  printEvents: false
  printContainerInfo: false
  printContainerEnvironment: false
  printContainerLabels: false

templates:
  nginx:
    # please set SPM token via APP container ENV variable e.g. docker run -e SPM_TOKEN=token nginx 
    spmToken: null
    portInContainer: 80/tcp
    matchImageName: nginx
    matchContainerName: .*
    spmSetupTemplate: setup-nginx --token ${spmToken} --url http://${host}:${port}/nginx_status --config "/tmp/${containerName}.yml" 
    spmRemoveTemplate: stop-node-agent /tmp/${containerName}.yml
    spmConfig:
       SPM_REPORTED_HOSTNAME: ${containerName}

  httpd:
    # please set SPM token via APP container ENV variable e.g. docker run -e SPM_TOKEN=token httpd 
    spmToken: null
    portInContainer: 80/tcp
    #sslPortInContainer: 443/tcp
    matchImageName: httpd
    matchContainerName: .*
    spmSetupTemplate: setup-httpd --token ${spmToken} --url http://${host}:${port}/server-status --config "/tmp/${containerName}.yml" 
    spmRemoveTemplate: stop-node-agent /tmp/${containerName}.yml  

  mongodb:
    # please set SPM token via APP container ENV variable e.g. docker run -e SPM_TOKEN=token mongo 
    spmToken: null
    portInContainer: 27017/tcp
    matchImageName: mongo
    matchContainerName: .*
    spmSetupTemplate: setup-mongodb --token ${spmToken} --url mongodb://${host}:${port}/admin --config "/tmp/${containerName}.yml" 
    spmRemoveTemplate: stop-node-agent /tmp/${containerName}.yml  
  
  jvm:
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    # Note JVM needs to open JMX port 
    jmxPort: 3000
    # edit your image names ...
    matchImageName: java|spring|jetty
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type jvm --agent-type standalone --region ${region}
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'

  elasticsearch:
    # please set SPM token via APP container ENV variable e.g. docker run -e SPM_TOKEN=token elasticsearch 
    spmToken: null
    portInContainer: 9200/tcp
    matchImageName: elasticsearch
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type elasticsearch --agent-type standalone --region ${region}
    spmConfig:
       SPM_MONITOR_ES_NODE_HOSTPORT: 'http://${host}:${port}'
       #SPM_MONITOR_ES_NODE_HOSTPORT: 'https://${host}:${port}'
       SPM_CONTAINER_NAME: '${containerName}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'
       jvm-name: '${containerId}'
       #SPM_MONITOR_ES_NODE_BASICAUTH_USERNAME: admin
       #SPM_MONITOR_ES_NODE_BASICAUTH_PASSWORD: admin
    spmRemoveTemplate: bash ${globalConfig.removeCommand} ${spmToken} ${containerName}

  redis:
    # please set SPM token via APP container ENV variable e.g. docker run -e SPM_TOKEN=token redis 
    spmToken: null
    portInContainer: 6379/tcp
    matchImageName: redis
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type redis --agent-type standalone --region ${region}
    spmRemoveTemplate: bash ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       REDIS_HOST: ${host}
       REDIS_PORT: ${port}
       REDIS_PASSWORD: null
       SPM_CONTAINER_NAME: ${containerName}
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'

  solrCloud: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    jmxPort: 3000
    matchImageName: solr
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type solrcloud --agent-type standalone --region ${region}
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'


  
  kafka-broker: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    jmxPort: 3000
    matchImageName: kafka
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type kafka --app-subtype kafka-broker --agent-type standalone --region ${region}
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'
  
  kafka-producer: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    jmxPort: 3000
    matchImageName: kafka
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type kafka --app-subtype kafka-producer --agent-type standalone --region ${region} 
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'

  
  kafka-consumer: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    jmxPort: 3000
    matchImageName: kafka
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type kafka --app-subtype kafka-consumer --agent-type standalone --region ${region}
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'

  
  tomcat: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    jmxPort: 3000
    matchImageName: tomcat
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type tomcat --agent-type standalone --region ${region}
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'


  zookeeper: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    # Note ZK needs to open JMX port 
    jmxPort: 3000
    matchImageName: zookeeper
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type zookeeper --agent-type standalone --region ${region} 
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'

  cassandra: 
    spmToken: null
    # JMX port is not exposed
    # portInContainer: 3000/tcp
    # Note Cassandra needs to open JMX port use LOCAL_JMX=no for cassandra container
    jmxPort: 7199 
    matchImageName: cassandra
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type cassandra --agent-type standalone --region ${region} 
    spmRemoveTemplate: ${globalConfig.removeCommand} ${spmToken} ${containerName}
    spmConfig:
       SPM_MONITOR_JMX_PARAMS: -Dspm.remote.jmx.url=${host}:${config.jmxPort}
       SPM_CONTAINER_NAME: ${containerName}
       jvm-name: '${containerId}'
       SPM_MONITOR_TAGS: 'cn:${containerName},cid:${containerId},ci:${container.Image},node-name:process.env.SPM_REPORTED_HOSTNAME'

  haproxy: 
    matchImageName: /haproxy/i 
    matchContainerName: .*
    portInContainer: 1936/tcp
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type haproxy --agent-type standalone --region ${region} 
    spmRemoveTemplate: ${globalConfig.removeCommand} ${config.spmToken}
    spmConfig:
      SPM_CONTAINER_NAME: ${containerName}
      SPM_MONITOR_HAPROXY_STATS_URL: http://${host}:${port}${containerEnv.SPM_MONITOR_HAPROXY_STATS_PATH};csv
      SPM_MONITOR_HAPROXY_USER: "${containerEnv.SPM_MONITOR_HAPROXY_USER}"
      SPM_MONITOR_HAPROXY_PASSWORD: "${containerEnv.SPM_MONITOR_HAPROXY_PASSWORD}"
  
  mysql:
    spmToken: null
    portInContainer: 3306/tcp
    matchImageName: mysql|mariadb|percona
    matchContainerName: .*
    spmSetupTemplate: ${globalConfig.setupCommand} --infra-token ${infraToken} --monitoring-token ${spmToken} --app-type mysql --agent-type standalone --region ${region} 
    spmRemoveTemplate: ${globalConfig.removeCommand} ${config.spmToken} {containerId}
    spmConfig:
      SPM_MONITOR_MYSQL_DB_HOST_PORT: ${host}:${port}
      SPM_MONITOR_MYSQL_DB_USER: ${containerEnv.MYSQL_USER}
      SPM_MONITOR_MYSQL_DB_PASSWORD: ${containerEnv.MYSQL_PASSWORD}
      SPM_CONTAINER_NAME: ${containerName}
